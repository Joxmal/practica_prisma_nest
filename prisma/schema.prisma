// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
  superAdmin
}

model User {
  id       Int    @id @default(autoincrement())
  name     String @unique
  role     Role?  @default(user)
  password String @db.VarChar(100)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post Post[]

  @@map("users")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @unique @db.VarChar(50)
  content   String?  @db.VarChar(255)
  published Boolean? @default(false)
  images    String[] @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User? @relation(fields: [authorID], references: [id])
  authorID Int?

  files filesPost[]

  cooperador Cooperador[]

  @@map("posts")
}

model filesPost {
  id        Int    @id @default(autoincrement())
  groupName String
  filename  String
  patch     String
  size      Int
  secureUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post Post[]

  @@map("files")
}

// Cooperadores


enum TipoCooperador {
  patrocinador
  colaborador
}

//tambien puede ser colaborador
model Cooperador {
  id         Int            @id @default(autoincrement())
  tipoCedula String?
  cedula     Int            @unique @db.Integer()
  nombre     String         @db.VarChar(30)
  ubicacion  String?
  tipo       TipoCooperador

  categorias Categoria[]
  post       Post[]

  @@map("cooperador")
}

model Categoria {
  id             Int          @id @default(autoincrement())
  name           String       @unique
  cooperador Cooperador[]

  @@map("categorias")
}
